// GENERATED by @edgedb/generate v0.5.3

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
export type $AccountλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "provider": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "providerAccountId": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "access_token": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "createdAt": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, true>;
  "expires_at": $.PropertyDesc<_std.$int64, $.Cardinality.AtMostOne, false, false, false, false>;
  "id_token": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "refresh_token": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "scope": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "session_state": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "token_type": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "type": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "user": $.LinkDesc<$User, $.Cardinality.One, {}, false, false,  false, false>;
  "userId": $.PropertyDesc<_std.$uuid, $.Cardinality.One, false, true, false, false>;
  "<accounts[is User]": $.LinkDesc<$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<accounts": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Account = $.ObjectType<"default::Account", $AccountλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {provider: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },providerAccountId: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {providerAccountId: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Account = $.makeType<$Account>(_.spec, "0c67346c-107c-11ef-ac68-fb8157149cea", _.syntax.literal);

const Account: $.$expr_PathNode<$.TypeSet<$Account, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Account, $.Cardinality.Many), null);

export type $CompetitorsλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "description": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "link": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
}>;
type $Competitors = $.ObjectType<"default::Competitors", $CompetitorsλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Competitors = $.makeType<$Competitors>(_.spec, "0c6cbe50-107c-11ef-8eb1-074dce6e22ae", _.syntax.literal);

const Competitors: $.$expr_PathNode<$.TypeSet<$Competitors, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Competitors, $.Cardinality.Many), null);

export type $DomainλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "available": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "domain": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "isPremiumName": $.PropertyDesc<_std.$bool, $.Cardinality.AtMostOne, false, false, false, false>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
}>;
type $Domain = $.ObjectType<"default::Domain", $DomainλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Domain = $.makeType<$Domain>(_.spec, "0c6daa04-107c-11ef-8458-33cfcf86624c", _.syntax.literal);

const Domain: $.$expr_PathNode<$.TypeSet<$Domain, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Domain, $.Cardinality.Many), null);

export type $IdeasλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "slug": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "keyword": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "keywords": $.PropertyDesc<$.ArrayType<_std.$json>, $.Cardinality.AtMostOne, false, false, false, false>;
  "domainList": $.PropertyDesc<$.ArrayType<_std.$json>, $.Cardinality.AtMostOne, false, false, false, false>;
  "redditRelatedPosts": $.PropertyDesc<$.ArrayType<_std.$json>, $.Cardinality.AtMostOne, false, false, false, false>;
  "topCompetitors": $.PropertyDesc<$.ArrayType<_std.$json>, $.Cardinality.AtMostOne, false, false, false, false>;
  "userId": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "description": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
}>;
type $Ideas = $.ObjectType<"default::Ideas", $IdeasλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Ideas = $.makeType<$Ideas>(_.spec, "0c720d92-107c-11ef-bf8f-25c7d5bd01bf", _.syntax.literal);

const Ideas: $.$expr_PathNode<$.TypeSet<$Ideas, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Ideas, $.Cardinality.Many), null);

export type $KeywordMetricsλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "avgSearches": $.PropertyDesc<_std.$int64, $.Cardinality.One, false, false, false, false>;
  "c": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "cIx": $.PropertyDesc<_std.$int64, $.Cardinality.One, false, false, false, false>;
  "high": $.PropertyDesc<_std.$int64, $.Cardinality.One, false, false, false, false>;
  "low": $.PropertyDesc<_std.$int64, $.Cardinality.One, false, false, false, false>;
  "<metrics[is Keywords]": $.LinkDesc<$Keywords, $.Cardinality.Many, {}, false, false,  false, false>;
  "<metrics": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $KeywordMetrics = $.ObjectType<"default::KeywordMetrics", $KeywordMetricsλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $KeywordMetrics = $.makeType<$KeywordMetrics>(_.spec, "0c6ebb24-107c-11ef-932c-87469a3dac8f", _.syntax.literal);

const KeywordMetrics: $.$expr_PathNode<$.TypeSet<$KeywordMetrics, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($KeywordMetrics, $.Cardinality.Many), null);

export type $KeywordsλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "metrics": $.LinkDesc<$KeywordMetrics, $.Cardinality.One, {}, false, false,  false, false>;
  "text": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
}>;
type $Keywords = $.ObjectType<"default::Keywords", $KeywordsλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Keywords = $.makeType<$Keywords>(_.spec, "0c6ff552-107c-11ef-97e3-355f8ee6c4d2", _.syntax.literal);

const Keywords: $.$expr_PathNode<$.TypeSet<$Keywords, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Keywords, $.Cardinality.Many), null);

export type $RedditRelatedPostDataλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "created": $.PropertyDesc<_std.$int64, $.Cardinality.One, false, false, false, false>;
  "selftext": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "subreddit": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "title": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "url": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
}>;
type $RedditRelatedPostData = $.ObjectType<"default::RedditRelatedPostData", $RedditRelatedPostDataλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $RedditRelatedPostData = $.makeType<$RedditRelatedPostData>(_.spec, "0c70f556-107c-11ef-ba19-455141b7ba7d", _.syntax.literal);

const RedditRelatedPostData: $.$expr_PathNode<$.TypeSet<$RedditRelatedPostData, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($RedditRelatedPostData, $.Cardinality.Many), null);

export type $SessionλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "user": $.LinkDesc<$User, $.Cardinality.One, {}, false, false,  false, false>;
  "userId": $.PropertyDesc<_std.$uuid, $.Cardinality.One, false, true, false, false>;
  "createdAt": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, true>;
  "expires": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, false>;
  "sessionToken": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "<sessions[is User]": $.LinkDesc<$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<sessions": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Session = $.ObjectType<"default::Session", $SessionλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {sessionToken: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Session = $.makeType<$Session>(_.spec, "0c73a29c-107c-11ef-8b01-598a22558ad7", _.syntax.literal);

const Session: $.$expr_PathNode<$.TypeSet<$Session, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Session, $.Cardinality.Many), null);

export type $UserλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "createdAt": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, true>;
  "email": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "emailVerified": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, false>;
  "image": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "accounts": $.LinkDesc<$Account, $.Cardinality.Many, {}, false, true,  false, false>;
  "sessions": $.LinkDesc<$Session, $.Cardinality.Many, {}, false, true,  false, false>;
  "<user[is Account]": $.LinkDesc<$Account, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user[is Session]": $.LinkDesc<$Session, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $User = $.ObjectType<"default::User", $UserλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {email: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $User = $.makeType<$User>(_.spec, "0c69e41e-107c-11ef-866d-59720f22a29b", _.syntax.literal);

const User: $.$expr_PathNode<$.TypeSet<$User, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($User, $.Cardinality.Many), null);

export type $VerificationTokenλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "identifier": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "token": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "createdAt": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, true>;
  "expires": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, false>;
}>;
type $VerificationToken = $.ObjectType<"default::VerificationToken", $VerificationTokenλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {identifier: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },token: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {token: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $VerificationToken = $.makeType<$VerificationToken>(_.spec, "0c823438-107c-11ef-bea2-ad939b0f5385", _.syntax.literal);

const VerificationToken: $.$expr_PathNode<$.TypeSet<$VerificationToken, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($VerificationToken, $.Cardinality.Many), null);



export { $Account, Account, $Competitors, Competitors, $Domain, Domain, $Ideas, Ideas, $KeywordMetrics, KeywordMetrics, $Keywords, Keywords, $RedditRelatedPostData, RedditRelatedPostData, $Session, Session, $User, User, $VerificationToken, VerificationToken };

type __defaultExports = {
  "Account": typeof Account;
  "Competitors": typeof Competitors;
  "Domain": typeof Domain;
  "Ideas": typeof Ideas;
  "KeywordMetrics": typeof KeywordMetrics;
  "Keywords": typeof Keywords;
  "RedditRelatedPostData": typeof RedditRelatedPostData;
  "Session": typeof Session;
  "User": typeof User;
  "VerificationToken": typeof VerificationToken
};
const __defaultExports: __defaultExports = {
  "Account": Account,
  "Competitors": Competitors,
  "Domain": Domain,
  "Ideas": Ideas,
  "KeywordMetrics": KeywordMetrics,
  "Keywords": Keywords,
  "RedditRelatedPostData": RedditRelatedPostData,
  "Session": Session,
  "User": User,
  "VerificationToken": VerificationToken
};
export default __defaultExports;
